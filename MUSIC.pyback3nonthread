try:
    from stagger import read_tag
    from os import listdir, system, sep
    from warnings import simplefilter
except Exception as e:
    input('Import Error : '+str(e))


simplefilter('ignore') #ignores warnings I THINK
testing = False#True#
dirr = 'D:\\Music\\'
query = 'start /min vlc --qt-start-minimized --mmdevice-volume=0.35 ( %s )'


def fetchfiles(dirr):
    '''To fetch all files recursively from the directory'''
    
    #making sure formats are okay
    if not dirr: return None
    elif dirr[-1] != sep: dirr = dirr + sep
    
    #gather folders and files
    filenames = [dirr+x for x in listdir(dirr) if len(x.split('.')) >= 2]
    folders = [x for x in listdir(dirr) if len(x.split('.')) == 1]
    for x in folders: #add contents of folders into files recursively
        filenames.extend(fetchfiles(dirr + x + sep))
    return filenames


def fetchthearray(dirr):
    
    files=[]
    filenames=fetchfiles(dirr)
    for x in filenames:
        try:
            files.append([x, read_tag(x).comment])
        except Exception as e:
            pass#print('scan issue : '+x) # making it look like Tony Stark
        finally:
            pass
    return files


def printtag(li):
    print()
    for x in li:
        print('%15s'%x, end='\t\t')


def main():
    
    alltags = []
    
    #gather all tags in collection
    print('Loading . . .')
    ff = fetchthearray(dirr)
    if not testing: system('cls')
    for file in ff: alltags.extend([x.lower() for x in file[1].split()])
    alltags=list(set(alltags))
    alltags.sort()
    printtag(alltags)
    
    #gather required tags
    addtags = [x.lower() for x in input("\n\nAdd Songs : ").split()]
    
    #gather all tags included in selection
    tags=[]
    for file in ff:
        if set([x.lower() for x in file[1].split()])&set(addtags):
            tags.extend([x.lower() for x in file[1].split()])
    tags=list(set(tags))
    tags.sort()
    printtag(tags)
    
    #gather undesired tags from selection
    subtags = [x.lower() for x in input('\n\nRemove Songs : ').split()]
    PLAYLIST=[]
    for file in ff:
        if set(addtags)&set([x.lower() for x in file[1].split()]) and not set(subtags)&set([x.lower() for x in file[1].split()]):
            PLAYLIST.append(file[0])
    PLAYLIST.sort()
    
    system('cls')
    songs=''
    for x in PLAYLIST: 
        print(x)
        songs = songs + '"' + x + '" '
    if 'no' in input('\nPlay Selection ? : ').lower(): exit()
    if PLAYLIST: system(query%songs)
    if testing: input('Command : ' + query%songs)


try:
    main()
except Exception as e:
    if testing:
        input(e)
